% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicteff.R
\name{predicteff}
\alias{predicteff}
\title{Predicts treatment effects on an outcome for individuals  randomly sampled from the entire dataset (default 20\%).}
\usage{
predicteff(
  x,
  featuresinf = NULL,
  cores = 1,
  seed = 1234,
  plot.overlap = FALSE,
  quant = Inf,
  dup = FALSE,
  profile = FALSE
)
}
\arguments{
\item{x}{a \code{list} with a fields \code{teffdata} and \code{features}.
\code{teffdata} is a \code{data.frame} (or \code{matrix}) with the treatment
\code{$t} and the outcome \code{$eff} variables, and covariates across
subjects. \code{features} is a \code{matrix} which the profiling
is of subjects if performed. The features are adjusted for the covariates
on the \code{teffdata} before fitting the causal random forest forest.}

\item{featuresinf}{a \code{vector} of characters with the names of the
features to be used; a \code{matrix} of characters whose columns are
names of features whose values will be averaged (Default:NULL).}

\item{cores}{an integer with the number of cores for parallel
computation (Default:1)}

\item{seed}{and integer with the random seed for splitting data into
train (80\%) and test (20\%) sets.}

\item{plot.overlap}{a logical. If \code{TRUE} then it plots the overlap of
adjusted feature data across treatments. Parameter available for less
than 20 features (Default: \code{FALSE}).}

\item{quant}{a number from 0 to 1 with the quantile of features to be selected
with top information score from the causal forest.
By default it selects all the features (Default: Inf).}

\item{dup}{a logical that indicates whether the feature and teff data should
be duplicated in case of small datasets.}

\item{profile}{a logical. If \code{TRUE} then it estimates a profile of binarized
feature data for the individuals with significantly positive and negative treatment effects, respectively.}
}
\value{
a \code{list} of class \code{pteff} with fields:
\describe{
\item{predictions:}{a \code{vector} with the estimated treatment effect
of the individuals in the test set.}
\item{featurenames:}{a \code{vector} with the names of the features used.}
\item{cl:}{a \code{vector} with the lower limit of the 95\% confidence
intervals for the estimated treatment effect.}
\item{cu:}{a \code{vector} with the upper limit of the 95\% confidence
intervals for the estimated treatment effect.}
\item{subsids:}{a \code{vector} with ids of subjects in the test set.}
\item{treatment:}{a \code{vector} with treatment effect in the test set.}
\item{profile:}{a \code{list} with fields \code{profpositive} and \code{profnegative}
that are matrices with binarized feature data for the individuals with
significantly positive and negative treatment effects, respectively.}
}
}
\description{
Predicts treatment effects on an outcome for individuals  randomly sampled from the entire dataset (default 20\%).
}
\details{
This function sets up feature and treatment-effects data, fits
random causal forest and identify the individuals with significant
treatment effects. Each individual is characterized by a set of feature data and the
the effect of treatment on the individual is given by the estimated difference of an
outcome between treating and and not treating when the feature data are kept constant.
Individuals with significant treatment effects
are considered for those whose confidence intervals for the treatment
estimate do not overlap 0. Consensus profiles of individuals with
positive, and negative, treatment effects are obtained from majority votes of
adjusted features, binarized over the population means.

The result is two profiles, associated with positive and negative
treatment effects, given by logical vectors across the
features. The logical value of a given profile at feature indicates whether the
adjusted feature of a new individual should be higher than the feature population
mean if the individual is successfully targeted by the profile. See \link[teff]{taget}.
}
\examples{
data(tcell)
homologous<- matrix(c("DDX3Y","DDX3X","KDM5D","KDM5C","PRKY","PRKX","RPS4Y1","RPS4X","TXLNGY", "TXLNG", "USP9Y", "USP9X", "XIST", "XIST", "TSIX", "TSIX"), nrow=2)
predicteff(tcell, featuresinf=homologous, profile=TRUE)

}
